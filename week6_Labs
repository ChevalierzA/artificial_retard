#include <iostream>
#include <cmath>
using namespace std;
int successiveSum(int n){
	int sum=0;
	for(int i =1;i<=n;i++){
	sum+=i;
	}
	return sum;
}
int successiveProduct(int n){
	int sum=1;
	for(int i =1;i<=n;i++){
	sum*=i;
	}
	return sum;
}
int reversedInteger(int x){
	int temp = 0;
	while(x){
	temp = temp*10+x%10;
	x/=10;
	};
	return temp;
}

float quadraticTester(float a ,float b, float c){
float delta=b*b-4*a*c;
if(delta>0)return 2;
else if(delta==0)return 1;
else return 0;
}
int quadraticSolver(float a, float b,float c){
	float ans[2]={0,0};
	float delta=b*b-4*a*c;
	delta=sqrt(delta);
	if(quadraticTester(a,b,c)==2){
		ans[0]=(-b+delta)/(2*a);
		ans[1]=(-b-delta)/(2*a);
	}
		else if(quadraticTester(a,b,c)==1){
		ans[0]=(-b+delta)/(2*a);
		ans[1]=(-b-delta)/(2*a);
	}
	return *ans;
}


int main(){
	//int x;
	//cin>>x;
	//successiveSum(x);
	//cout<<successiveProduct(x);
	//cout<<reversedInteger(x);
	float a,b,c;
	cin>>a>>b>>c;
	float ans[2]={1,1};
	*ans=quadraticSolver(a,b,c);
	ans[1]=*(ans+1);
	if(quadraticTester(a,b,c)==1)
	{
		cout<<ans[0];
	}
		else if(quadraticTester(a,b,c)==2)
		{
		cout<<ans[0]<<endl;
		cout<<ans[1]<<endl;
	}
		else 
		{
		cout<<"DNE"<<endl;
	}
}
