#include<iostream>
#include<cmath>
using namespace std;

//Classes in C++
/*
Both member variables and member functions.

C++ Class Syntax:
class className
{
public:
member variables come here...
member functions come here...
};
*/


class Point
{
private:
	float x,y;

public:
	Point();
	Point(float newX,float newY);
	float getX();
	float getY();
	void setX(float newX);
	void setY(float newY);
	void print();
};

//scope resolution operator::

	Point::Point()//Constructor Member Functions
	{
		setX(0.0);
		setY(0.0);
	}
	Point::Point(float newX,float newY)
	{
		setX(newX);
		setY(newY);
	}
	float Point:: getX()
	{
		return x;
	}
	float Point:: getY()
	{
		return y;
	}
	void Point:: setX(float newX)
	{
		x  = newX;
	}
	void Point:: setY(float newY)
	{
		y  = newY;
	}
	void Point:: print()
	{
		cout<<"("<<getX()<<","<<getY()<<")";
	}
	class Line
	{
	private:
		Point start,end;
	public:
		Line();
		Line(Point s,Point e);
		Point getStart();
		Point getEnd();
		void setStartPoint(Point s);
		void setEndPoint(Point e);

		double length();
		void print();
	};

	Line::Line()
	{
		start.setX(0.0);
		start.setY(1.0);
		end.setX(0.0);
		end.setY(1.0);
	}
	Line::Line(Point s,Point e)
	{
		setStartPoint(s);
		setEndPoint(e);
	}
	Point Line::getStart()
	{
		return start;
	}
	Point Line::getEnd()
	{
		return end;
	}
	void Line::setStartPoint(Point s)
	{
		start = s;
	}
	void Line::setEndPoint(Point e)
	{
		end = e;
	}
	double Line::length()
	{
		double deltaX = end.getX()-start.getX();
		double deltaY = end.getY()-start.getY();
		return sqrt(deltaX*deltaX+deltaY*deltaY);
	}
	void Line::print()
	{
		start.print();
		cout<<"---";
		end.print();
		cout<<endl;
		cout<<"The Length of the Line is "<<length()<<endl;
	}


	//if you have a nondefult,u must have a defult
	//. for obj, -> for pointer
int main()
{
	Point p1(0.0,0.0);
	Point p2(3.0,4.0);
	Line L(p1,p2);
	L.print();

	/*
	Point p1(1.0,2.0);
	Point &p1Ref = p1;//by reference // .
	Point *p1Ptr = &p1;//by pointer // ->
	Point p2 = p1;//assign values by assignment operator
	Point p3 = Point(p1);

	Point *pointArray=new Point[10];

	for(int i = 0;i<10;i++)
	{
		cout<<"Point P["<<i<<"] = ";
		pointArray[i].print();
		cout<<endl;
	}
	*/
	/*
	float x,y;
	cin>>x;
	cin>>y;
	p.setX(x);
	p.setY(y);
	p2.setX(100.0);
	p2.setY(2220.0);
	cout<<"The X = "<<p2.getX()<<endl;
	cout<<"The Y = "<<p2.getY()<<endl;
	cout<<"Point P1 = ";
	p1.print();
	cout<<endl;
	*/


}
