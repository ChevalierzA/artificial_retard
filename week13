#include<iostream>
#include<cmath>
using namespace std;
int factorial(int n){
	if(n==0)return 1;
	else return n*factorial(n-1);
}
void printVertical1(int n){
	int size = 0;
	int X = n;
	do{
		size++;
		X=X/10;
	}while(X>0);
	int*A = new int[size];
	X = n;
	int i = size-1;
	do{
		A[i] = X%10;
		X=X/10;
		i--;
	}while(X>0);
	for(i = 0;i<size;i++)
		cout<<A[i]<<endl;
	delete[] A;
}
void printVertical2(int n){
	int k = log10(1.0*n);
	int m = pow(10.0,k);
	while(m>0){
		cout<<n/m<<endl;
		n=n%m;
		m=m/10;
	}
}
void printVertical(int n){
	if(n<10){cout<<n<<endl;
	return;
	}
	else {
		printVertical(n/10);
		cout<<n%10<<endl;
	}
}
int sequentialSearch(const int A[],const int startIndex,const int lastIndex,const int searchValue){
	if(startIndex>lastIndex)return -1;
	else if (A[startIndex]==searchValue)return startIndex;
	else 
		return sequentialSearch(A,startIndex+1,lastIndex,searchValue);
}
int binarySearch(const int A[],const int startIndex,const int lastIndex,const int searchValue){
	if(startIndex>lastIndex)return -1;
	else{
		int m = (startIndex+lastIndex)/2;
		if(A[m]==searchValue)return m;
		else if (A[m]>searchValue)return binarySearch(A,startIndex,m-1,searchValue);
		else
			return binarySearch(A,m+1,lastIndex,searchValue);
	}
}
void toh1(int n,char A,char C,char B){//completely wrong
	int countA = n;
	int countB = 0;
	int countC = 0;
	int X = pow(2.0,n)-1;
	while(X!=0){
		if(X%2==0){
			cout<<"from "<<A<<" to "<<B<<endl;
			char temp = A;
			A = B;
			B = temp;
			X--;
	}
		if(X%2!=0){
			cout<<"from "<<A<<" to "<<C<<endl;
			char temp = A;
			A = C;
			C = temp;
			X--;
		}
}
}
void toh(int n,char A,char C,char B){

	if(n==1){
		cout<<"move "<<A<<" to "<<C<<endl;
	}
	else
	{

		 toh(n-1,A,B,C);
		 toh(1,A,C,B);
		 toh(n-1,B,C,A);
	}
}
void foo(int x)
{
if (x <= 0)
cout << 0 << endl;
else
{
foo(x-1);
cout << x << endl;
foo(x-2);
}
}
int main(){
	foo(3);

}
